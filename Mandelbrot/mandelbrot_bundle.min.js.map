{"version":3,"sources":["webpack:///webpack/bootstrap 645776159d8b374b3a1f","webpack:///./lib/complex_utils.js","webpack:///./lib/game_view.js","webpack:///./lib/color_grad.js","webpack:///./lib/mandelbrot_image.js","webpack:///./mandelbrot.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AChDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChKA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","file":"mandelbrot_bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 645776159d8b374b3a1f","function squareAndAddComplexNum(z, constantC) {\n  var a = z[0],\n  b = z[1],\n  c1 = constantC[0],\n  c2 = constantC[1];\n\n  return [a * a - b * b + c1, 2 * a * b + c2];\n}\n\nfunction magnitude(z) {\n  var a = z[0],\n  b = z[1];\n\n  return a * a + b * b;\n}\n\nmodule.exports = {\n  squareAndAddComplexNum: squareAndAddComplexNum,\n\n  magnitude: magnitude,\n\n  iterate: function(pos, numSteps) {\n    var iterator = [0,0];\n    for(var i = 0; i < numSteps; i++) {\n      iterator = squareAndAddComplexNum(iterator, pos);\n      if(magnitude(iterator) > 8) return (1 - i / numSteps) * 255;\n    }\n    return 0;\n  },\n\n  inCardioid: function(pos) {\n    var a = pos[0],\n    b = pos[1],\n    p = Math.sqrt((a - 1 / 4) * (a - 1 / 4) + b * b);\n\n    if(a < p - 2 * p * p + 1 / 4) {\n      return true;\n    }\n    return false;\n  },\n\n  inMainDisk: function(pos) {\n    var a = pos[0],\n    b = pos[1];\n\n    if (magnitude([a + 1, b]) < 1 / 16) return true;\n    return false;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/complex_utils.js\n// module id = 0\n// module chunks = 0","var MandelbrotImage = require('./mandelbrot_image'),\n    ColorGrad = require('./color_grad');\n\nvar GameView = function(mandelCanvEl,colorCanvEl) {\n  this.mandelCanvEl = mandelCanvEl;\n  this.image = new MandelbrotImage(\n    mandelCanvEl.getContext('2d'),\n    mandelCanvEl.width,\n    mandelCanvEl.height\n  );\n  this.colorCanvEl = colorCanvEl;\n  this.colorGrad = new ColorGrad(\n    colorCanvEl.getContext('2d'),\n    this.image.updateColor.bind(this.image)\n  )\n};\n\nGameView.prototype.launch = function() {\n  this.mandelCanvEl.ondblclick = function(e) {\n    this.image.zoomOnPosition(\n      e.offsetX * this.mandelCanvEl.width / this.mandelCanvEl.clientWidth,\n      e.offsetY * this.mandelCanvEl.height / this.mandelCanvEl.clientHeight\n    )\n    this.image.draw()\n  }.bind(this)\n\n  this.image.draw();\n  [].forEach.call(\n    document.getElementsByClassName('loading'),\n    function(el) {el.style.display = \"none\"}\n  );\n  this.mandelCanvEl.style.display = \"block\";\n  var zoomOut = document.getElementById(\"zoom-out\")\n  zoomOut.onclick = this.image.zoomOut.bind(this.image)\n  this.mandelCanvEl.parentElement.appendChild(zoomOut)\n\n  this.colorGrad.launch(\n    this.colorCanvEl.width / this.colorCanvEl.clientWidth,\n    this.colorCanvEl.height / this.colorCanvEl.clientHeight\n  )\n};\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 1\n// module chunks = 0","var colors = ['#f00','#ff0','#0f0','#0ff','#00f','#f0f','#f00']\n\nvar ColorGrad = function(ctx,updateCB) {\n  this.ctx = ctx\n  this.grad = ctx.createLinearGradient(0,0,ctx.canvas.width,0)\n  for(var i = 0; i < 7; i++) {\n    this.grad.addColorStop(i / 6, colors[i])\n  }\n  this.updateColor = updateCB\n}\n\nColorGrad.prototype.launch = function(xCorrection,yCorrection) {\n  function resetColor(e) {\n    var colorData = this.ctx.getImageData(\n      Math.round(e.offsetX * xCorrection),\n      Math.round(e.offsetY * yCorrection),\n      1,\n      1\n    ).data.slice(0,3)\n    if(colorData[0] || colorData[1] || colorData[2]) this.updateColor(colorData);\n  }\n  this.ctx.fillStyle = this.grad\n  this.ctx.fillRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)\n  this.ctx.canvas.onclick = resetColor.bind(this)\n};\n\nmodule.exports = ColorGrad;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/color_grad.js\n// module id = 2\n// module chunks = 0","var squareAndAddComplexNum = require('./complex_utils').squareAndAddComplexNum,\n    magnitude = require('./complex_utils').magnitude,\n    iterate = require('./complex_utils').iterate,\n    inCardioid = require('./complex_utils').inCardioid,\n    inMainDisk = require('./complex_utils').inMainDisk;\n\nfunction unitColorVect(rgbArray) {\n  var floatArray = [] // rgbArray is UIntClampedArray, so .map will not return floats\n  rgbArray.forEach(function(el) {floatArray.push(el / 255)})\n  return floatArray;\n}\n\nfunction rotateColorData(ctx,originalData,newColorVect) {\n  var newData = ctx.createImageData(originalData.width,originalData.height),\n      newD = newData.data,\n      d = originalData.data,\n      i = 0,\n      colorMag;\n\n  while(i < d.length) {\n    colorMag = Math.max(d[i],d[i + 1],d[i + 2]);\n    newD[i++] = newColorVect[0] * colorMag;\n    newD[i++] = newColorVect[1] * colorMag;\n    newD[i++] = newColorVect[2] * colorMag;\n    newD[i++] = 255;\n  }\n\n  return newData\n}\n\nvar MandelbrotImage = function(ctx,pxWidth,pxHeight) {\n  this.ctx = ctx;\n  this.upperLeft = [-2,1]\n  this.bottomRight = [1,-1]\n  this.pxWidth = pxWidth\n  this.pxHeight = pxHeight\n  this.zoomLevel = 0\n  this.previousZooms = []\n  this.color = [0,0,1]\n};\n\nMandelbrotImage.prototype.range = function (axis) {\n  return this.bottomRight[axis] - this.upperLeft[axis]\n};\n\nMandelbrotImage.prototype.zoomOnPosition = function (x,y) {\n  var ctx = this.ctx;\n\n  this.zoomLevel++\n  this.previousZooms.push({\n    ul: this.upperLeft.slice(0,2),\n    br: this.bottomRight.slice(0,2),\n    data: ctx.getImageData(0,0,this.pxWidth,this.pxHeight)\n  })\n\n  var rangeX = this.range(0),\n      rangeY = this.range(1),\n      cartX = this.upperLeft[0] + x * rangeX / this.pxWidth,\n      cartY = this.upperLeft[1] + y * rangeY / this.pxHeight,\n      newWidth = rangeX / 10,\n      newHeight = rangeY / 10,\n      scaledUL = [cartX - newWidth / 2, cartY - newHeight / 2],\n      scaledBR = [cartX + newWidth / 2, cartY + newHeight / 2]\n\n  this.upperLeft = scaledUL\n  this.bottomRight = scaledBR\n\n  this.draw()\n};\n\nMandelbrotImage.prototype.zoomOut = function() {\n  if(this.zoomLevel) {\n    var prevZoom = this.previousZooms.pop()\n    this.upperLeft = prevZoom.ul\n    this.bottomRight = prevZoom.br\n    this.ctx.putImageData(prevZoom.data,0,0)\n    this.zoomLevel--\n  }\n};\n\nMandelbrotImage.prototype.setChunkData = function (tl,delX,delY,chunk) {\n  var d  = chunk.data\n\n  var currentPos = tl.slice(0,2),\n      i = 0,\n      colorR = this.color[0],\n      colorG = this.color[1],\n      colorB = this.color[2],\n      colorMagnitude;\n\n  while(i < d.length) {\n    if(inCardioid(currentPos) || inMainDisk(currentPos)) {\n      colorMagnitude = 0\n    } else {\n      colorMagnitude = iterate(currentPos,256 * (this.zoomLevel + 1))\n    }\n    d[i++] = colorR * colorMagnitude\n    d[i++] = colorG * colorMagnitude\n    d[i++] = colorB * colorMagnitude\n    d[i++] = 255\n    if(Math.round(i / 4) % chunk.width == 0) {\n      currentPos[1] += delY\n      currentPos[0] = tl[0]\n    } else {\n      currentPos[0] += delX\n    }\n  }\n};\n\nMandelbrotImage.prototype.draw = function () {\n  var numXChunks = 4,\n      numYChunks = 3,\n      tl = this.upperLeft,\n      br = this.bottomRight,\n      rangeX = this.range(0),\n      rangeY = this.range(1),\n      delX = rangeX / numXChunks,\n      delY = rangeY / numYChunks,\n      chunkDelX = rangeX / this.pxWidth,\n      chunkDelY = rangeY / this.pxHeight,\n      chunkTL\n\n  function _chunk(i,j,chunk) {\n    if(i == numXChunks) {\n      i = 0\n      j++\n    }\n    if(j == numYChunks) return;\n\n    chunkTL = [tl[0] + i * delX, tl[1] + j * delY]\n    this.setChunkData(chunkTL,chunkDelX,chunkDelY,chunk)\n    this.ctx.putImageData(chunk,i * this.pxWidth / numXChunks,j * this.pxHeight / numYChunks)\n    setTimeout(_chunk.bind(this,i + 1, j, chunk),5) // Prevents thread-blocking for too long\n  }\n\n  var chunk = this.ctx.createImageData(\n    this.pxWidth / numXChunks,\n    this.pxHeight / numYChunks\n  )\n  _chunk.call(this,0,0,chunk)\n};\n\nMandelbrotImage.prototype.updateColor = function (rgbArray) {\n  var originalData = this.ctx.getImageData(0,0,this.pxWidth,this.pxHeight),\n      newColorVect = unitColorVect(rgbArray),\n      newData = rotateColorData(this.ctx,originalData,newColorVect);\n\n\n  this.color = newColorVect;\n  this.ctx.putImageData(newData,0,0);\n\n  for (var i = 0; i < this.previousZooms.length; i++) {\n    this.previousZooms[i].data = rotateColorData(\n      this.ctx,\n      this.previousZooms[i].data,\n      newColorVect\n    )\n  }\n};\n\nmodule.exports = MandelbrotImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mandelbrot_image.js\n// module id = 3\n// module chunks = 0","var mandelCanvEl = document.getElementById('mandelbrot-canvas'),\n    colorGradEl = document.getElementById('color-canvas'),\n    GameView = require('./lib/game_view'),\n    mandel = new GameView(mandelCanvEl,colorGradEl);\n\nsetTimeout(mandel.launch.bind(mandel), 50);\n\nvar infoHeaders = document.getElementsByClassName('info-header'),\n    infoContent = document.getElementsByClassName('info-section');\n\ninfoHeaders = Array.prototype.slice.call(infoHeaders, 0, infoHeaders.length);\ninfoContent = Array.prototype.slice.call(infoContent, 0, infoContent.length);\n\n\nfunction displaySection(idx) {\n  infoContent.forEach(function(el, i) {\n    if(idx == i) {\n      el.style.display = \"block\";\n    } else {\n      el.style.display = \"none\";\n    }\n  });\n}\n\ninfoHeaders.forEach((el, idx) => {\n  el.onclick = (e) => {\n    e.preventDefault();\n    displaySection(idx);\n  };\n});\ndisplaySection(0);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./mandelbrot.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}